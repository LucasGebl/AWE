// <auto-generated />
using System;
using AWE_Projekt.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace betriebsmittelverwaltung.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20210616124139_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AWE_Projekt.Models.ConstructionSite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<int?>("ManagerId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("ManagerId");

                    b.ToTable("ConstructionSites");
                });

            modelBuilder.Entity("AWE_Projekt.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CheckOut");

                    b.Property<int?>("ConstructionSiteId");

                    b.Property<int?>("ResourceId");

                    b.HasKey("Id");

                    b.HasIndex("ConstructionSiteId");

                    b.HasIndex("ResourceId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("AWE_Projekt.Models.Resource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BuyDate");

                    b.Property<int?>("ConstructionSiteId");

                    b.Property<string>("Name");

                    b.Property<int>("Type");

                    b.Property<double>("UtilizationRate");

                    b.HasKey("Id");

                    b.HasIndex("ConstructionSiteId");

                    b.ToTable("Resources");
                });

            modelBuilder.Entity("AWE_Projekt.Models.Return", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CheckIn");

                    b.Property<int?>("ResourceId");

                    b.HasKey("Id");

                    b.HasIndex("ResourceId");

                    b.ToTable("Returns");
                });

            modelBuilder.Entity("AWE_Projekt.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.Property<string>("Password");

                    b.Property<int>("Type");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("AWE_Projekt.Models.ConstructionSite", b =>
                {
                    b.HasOne("AWE_Projekt.Models.User", "Manager")
                        .WithMany()
                        .HasForeignKey("ManagerId");
                });

            modelBuilder.Entity("AWE_Projekt.Models.Order", b =>
                {
                    b.HasOne("AWE_Projekt.Models.ConstructionSite", "ConstructionSite")
                        .WithMany()
                        .HasForeignKey("ConstructionSiteId");

                    b.HasOne("AWE_Projekt.Models.Resource", "Resource")
                        .WithMany()
                        .HasForeignKey("ResourceId");
                });

            modelBuilder.Entity("AWE_Projekt.Models.Resource", b =>
                {
                    b.HasOne("AWE_Projekt.Models.ConstructionSite", "ConstructionSite")
                        .WithMany()
                        .HasForeignKey("ConstructionSiteId");
                });

            modelBuilder.Entity("AWE_Projekt.Models.Return", b =>
                {
                    b.HasOne("AWE_Projekt.Models.Resource", "Resource")
                        .WithMany()
                        .HasForeignKey("ResourceId");
                });
#pragma warning restore 612, 618
        }
    }
}
